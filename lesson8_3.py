# 3. Создайте собственный класс-исключение, который должен проверять содержимое списка на наличие только чисел.
# Проверить работу исключения на реальном примере. Необходимо запрашивать у пользователя данные и заполнять список.
# Класс-исключение должен контролировать типы данных элементов списка.
# Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
# При этом скрипт завершается, сформированный список выводится на экран.
# Подсказка: для данного задания примем, что пользователь может вводить только числа и строки.
# При вводе пользователем очередного элемента необходимо реализовать проверку типа элемента и вносить его в список, только если введено число.
# Класс-исключение должен не позволить пользователю ввести текст (не число) и отобразить соответствующее сообщение.
# При этом работа скрипта не должна завершаться.
class MyOwnerErr(Exception):
    def __init__(self, txt):
        self.txt = txt

v_input = ""
V_spisok = []
while v_input !="stop":
    v_input = input("Enter any :" )
    try:
        if v_input.isnumeric():
            V_spisok.append(int(v_input))
        else:
            raise MyOwnerErr("Вы ввели не число, это выражение не будет добавлено к основному списку.")
    except (ValueError, MyOwnerErr) as err:
        print(err)
    # else:
    #     print()
    # finally:
    #     print()
print(V_spisok)